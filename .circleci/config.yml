version: 2.1

aliases:
  - &working_directory ~/nodejs

  - &restore_yarn_cache_node_14
    keys:
      - v1-yarn-cache-node_14-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - v1-yarn-cache-node_14-{{ .Branch }}
      - v1-yarn-cache-node_14

  - &save_yarn_cache_node_14
    key: v1-yarn-cache-node_14-{{ .Branch }}-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn


  - &restore_yarn_cache_node_16
    keys:
      - v1-yarn-cache-node_16-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - v1-yarn-cache-node_16-{{ .Branch }}
      - v1-yarn-cache-node_16

  - &save_yarn_cache_node_16
    key: v1-yarn-cache-node_16-{{ .Branch }}-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn

  - &restore_yarn_cache_node_18
    keys:
      - v1-yarn-cache-node_18-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - v1-yarn-cache-node_18-{{ .Branch }}
      - v1-yarn-cache-node_18

  - &save_yarn_cache_node_18
    key: v1-yarn-cache-node_18-{{ .Branch }}-{{ checksum "yarn.lock" }}
    paths:
      - ~/.cache/yarn

  - &yarn_install
    name: Installing
    command: yarn --frozen-lockfile

executors:
  node_14:
    docker:
      - image: cimg/node:14.19.3
    working_directory: *working_directory
  node_16:
    docker:
      - image: cimg/node:16.16.0
    working_directory: *working_directory

  node_18:
    docker:
      - image: cimg/node:18.4.0
    working_directory: *working_directory

jobs:
  install_test_node_14:
    executor: node_14
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache_node_14
      - run: *yarn_install
      - save_cache: *save_yarn_cache_node_14
      - run:
          name: Running linters
          # Limiting the workers of Jest to 10
          # as the build otherwise dies due to resource restrictions.
          command: yarn lint --maxWorkers=10
      - run:
          name: Running tests
          # Limiting the workers of Jest to 10
          # as the build otherwise dies due to resource restrictions.
          command: yarn test:ci
      - run:
          name: Running test (with coverage report)
          command: yarn test:ci

  install_test_node_16:
    executor: node_16
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache_node_16
      - run: *yarn_install
      - save_cache: *save_yarn_cache_node_16
      - run:
          name: Running linters
          # Limiting the workers of Jest to 10
          # as the build otherwise dies due to resource restrictions.
          command: yarn lint --maxWorkers=10
      - run:
          name: Running tests (with coverage report)
          # Limiting the workers of Jest to 10
          # as the build otherwise dies due to resource restrictions.
          command: yarn test:coverage:ci
      - run:
          name: Running integration tests
          command: yarn test:integration

  install_test_node_18:
    executor: node_18
    steps:
      - checkout
      - restore_cache: *restore_yarn_cache_node_18
      - run: *yarn_install
      - save_cache: *save_yarn_cache_node_18
      - run:
          name: Running linters
          # Limiting the workers of Jest to 10
          # as the build otherwise dies due to resource restrictions.
          command: yarn lint --maxWorkers=10
      - run:
          name: Running tests (with coverage report)
          # Limiting the workers of Jest to 10
          # as the build otherwise dies due to resource restrictions.
          command: yarn test:coverage:ci
      - run:
          name: Running integration tests
          command: yarn test:integration

workflows:
  version: 2
  build_and_test:
    jobs:
      - install_test_node_14:
          context: org-global
      - install_test_node_16:
          context: org-global
          requires:
            - install_test_node_14
      - install_test_node_18:
          context: org-global
          requires:
            - install_test_node_16
