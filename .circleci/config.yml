node4Defaults: &node4Defaults
  docker:
    - image: circleci/node:4
  working_directory: ~/nodejs
node6Defaults: &node6Defaults
  docker:
    - image: circleci/node:6
  working_directory: ~/nodejs
node8Defaults: &node8Defaults
  docker:
    - image: circleci/node:8
  working_directory: ~/nodejs

aliases:
  - &restore_yarn_cache
    keys:
      - v1-yarn-cache-{{ checksum "yarn.lock" }}
      - v1-yarn-cache-

  - &save_yarn_cache
    key: v1-yarn-cache-{{ checksum "yarn.lock" }}
    paths:
      - node_modules

  - &yarn_install
    name: Install dependencies
    command: yarn install --pure-lockfile

  - &unit_test
    name: Run tests
    command: yarn test:ci --maxWorkers=10

  - &unit_test_with_coverage
    name: Run tests
    command: yarn test:coverage:ci --maxWorkers=10

version: 2
jobs:
  greenkeeper_lockfile:
    <<: *node8Defaults
    steps:
      - checkout
      - restore-cache: *restore_yarn_cache
      - run:
          name: Install greenkeeper-lockfile-update
          command: yarn global add greenkeeper-lockfile@1 --prefix ~/.yarn
      - run: *yarn_install
      - save_cache: *save_yarn_cache
      - run:
          name: Update greenkeeper-lockfile
          command: ~/.yarn/bin/greenkeeper-lockfile-update
      - run:
          name: Upload greenkeeper-lockfile
          command: ~/.yarn/bin/greenkeeper-lockfile-upload
  lint:
    <<: *node8Defaults
    steps:
      - checkout
      - restore-cache: *restore_yarn_cache
      - run: *yarn_install
      - save_cache: *save_yarn_cache
      - run:
          name: Run linters
          command: yarn lint
  test_unit_node_4:
    <<: *node4Defaults
    steps:
      - checkout
      - restore-cache: *restore_yarn_cache
      - run: *yarn_install
      - save_cache: *save_yarn_cache
      - run: *unit_test
  test_unit_node_6:
    <<: *node6Defaults
    steps:
      - checkout
      - restore-cache: *restore_yarn_cache
      - run: *yarn_install
      - save_cache: *save_yarn_cache
      - run: *unit_test
  test_unit_node_8:
    <<: *node8Defaults
    steps:
      - checkout
      - restore-cache: *restore_yarn_cache
      - run: *yarn_install
      - save_cache: *save_yarn_cache
      - run: *unit_test_with_coverage
  test_integration:
    <<: *node8Defaults
    steps:
      - checkout
      - restore-cache: *restore_yarn_cache
      - run: *yarn_install
      - save_cache: *save_yarn_cache
      - run:
          name: Run integration tests
          command: yarn test:integration
  prepare_release:
    <<: *node8Defaults
    steps:
      - checkout
      - restore-cache: *restore_yarn_cache
      - run: *yarn_install
      - save_cache: *save_yarn_cache
      - run:
          name: Run prepare release
          command: ./.circleci/prepare-release-packages.sh
  perform_release:
    <<: *node8Defaults
    steps:
      - checkout
      - restore-cache: *restore_yarn_cache
      - run: *yarn_install
      - save_cache: *save_yarn_cache
      - run:
          name: Run perform release
          command: ./.circleci/perform-release-packages.sh

workflows:
  version: 2
  build_and_test_and_maybe_release:
    jobs:
      - greenkeeper_lockfile
      - lint
      - test_unit_node_4:
          requires:
            - lint
      - test_unit_node_6:
          requires:
            - lint
      - test_unit_node_8:
          requires:
            - lint
      - test_integration:
          context: org-global
          filters:
            branches:
              only:
                - master
          requires:
            # Only depending on one unit testing
            # job will speed up the build by starting
            # the integration testing early (in confidence).
            - test_unit_node_8
      - prepare_release:
          context: org-global
          requires:
            - test_integration
          filters:
            branches:
              only:
                - master
      - perform_release:
          context: org-global
          requires:
            - prepare_release
